

# Setting up the Ontrack CLI
.ontrack_setup:
  before_script: |

      export ONTRACK_CLI_VERSION_DEFAULT=0.2.0
      
      if [[ "${ONTRACK_URL}" == "" ]]
      then
        echo "Missing ONTRACK_URL variable."
        exit 1
      fi

      if [[ "${ONTRACK_TOKEN}" == "" ]]
      then
        echo "Missing ONTRACK_TOKEN variable."
        exit 1
      fi

      if [[ "${ONTRACK_CLI_VERSION}" == "" ]]
      then
        echo "No ONTRACK_CLI_VERSION defined at project or group level, using ${ONTRACK_CLI_VERSION_DEFAULT} by default."
        export ONTRACK_CLI_VERSION=${ONTRACK_CLI_VERSION_DEFAULT}
      fi

      export OS=$(uname -s | tr '[:upper:]' '[:lower:]')

      export ARCH=$(uname -m)
      if [[ "${ARCH}" == "x86_64" ]]
      then
        export ARCH="386"
      fi

      export ONTRACK_CLI_URL="https://github.com/nemerosa/ontrack-cli/releases/download/${ONTRACK_CLI_VERSION}/ontrack-cli-${OS}-${ARCH}"
      echo "Downloading the Ontrack CLI from ${ONTRACK_CLI_URL}"
      curl --output ontrack-cli --fail -L "${ONTRACK_CLI_URL}"

      chmod u+x ontrack-cli
      ./ontrack-cli version --cli

      echo "Setting up Ontrack config to ${ONTRACK_URL}"
      ./ontrack-cli config create default "${ONTRACK_URL}" --token "${ONTRACK_TOKEN}"


      # TODO Support for merge request
      echo "Setting up Ontrack project ${CI_PROJECT_NAME} & branch ${CI_COMMIT_BRANCH}"
      ./ontrack-cli branch setup --project "${CI_PROJECT_NAME}" --branch "${CI_COMMIT_BRANCH}"

      # Git setup of the branch
      ./ontrack-cli branch set-property --project "${CI_PROJECT_NAME}" --branch "${CI_COMMIT_BRANCH}" git --git-branch "${CI_COMMIT_BRANCH}"

  artifacts:
    name: ontrack
    paths:
      - ./ontrack-cli
      - ./.ontrack-cli-config.yaml

# Creating a build
.ontrack-build:
  after_script: |

    ./ontrack-cli build setup --project "${CI_PROJECT_NAME}" --branch "${CI_COMMIT_BRANCH}" --build "${CI_PIPELINE_IID}" \
       --commit "${CI_COMMIT_SHA}"


# Creating a simple (non typed) validation
.ontrack-build:
  after_script: |

    if [[ "${ONTRACK_VALIDATION}" == "" ]]; then
      echo "Missing ONTRACK_VALIDATION variable."
      exit 1
    fi

    if [[ "${CI_JOB_STATUS}" == "success" ]]; then
      ONTRACK_VALIDATION_STATUS=PASSED
    else
      ONTRACK_VALIDATION_STATUS=FAILED
    fi
    ./ontrack-cli validate --project "${CI_PROJECT_NAME}" --branch "${CI_COMMIT_BRANCH}" --build "${CI_PIPELINE_IID}" --validation ${ONTRACK_VALIDATION} --status ${ONTRACK_VALIDATION_STATUS}
